.container {
  min-height: 100vh;
  background-size: cover;
  background-position: center;
  display: flex;
  flex-direction: column;
  padding: 20px;
  position: relative;
  color: #2c3e50;
}

.header {
  display: flex;
  align-items: flex-start;
  margin-bottom: 20px;
  z-index: 1;
}

.backButton {
  background: none;
  border: none;
  font-size: 24px;
  color: #2c3e50;
  padding: 8px 12px;
  cursor: pointer;
  margin-right: 10px;
}

.titleContainer {
  flex: 1;
}

.title {
  font-size: 24px;
  margin: 0;
  font-weight: 600;
  font-family: 'Bellota', sans-serif;
}

.subtitle {
  font-size: 16px;
  margin: 4px 0 0;
  font-family: 'Bellota', sans-serif;
  opacity: 0.8;
}

.instruction {
  position: absolute;
  top: 90px;
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  max-width: 600px;
  z-index: 10;
  text-align: center;
  font-size: 18px;
  font-family: 'Bellota', sans-serif;
  color: #2c3e50;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
}

.instruction p {
  margin: 0;
  line-height: 1.5;
}

.countdown {
  font-size: 36px;
  font-weight: bold;
  color: #90EE90;
  text-shadow: 0 0 10px rgba(144, 238, 144, 0.3);
}

.bodyContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  margin: 0;
  width: 100%;
}

.currentInstruction {
  text-align: center;
  font-size: 18px;
  font-family: 'Bellota', sans-serif;
  color: #2c3e50;
  max-width: 600px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
}

.currentInstruction p {
  margin: 0;
  line-height: 1.5;
}

.circularScanner {
  position: relative;
  width: 300px;
  height: 300px;
  border: 2px solid rgba(144, 238, 144, 0.5);
  border-radius: 50%;
}

/* Radar sweep animation */
@keyframes sweep {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.radarSweep {
  position: absolute;
  width: 150px;
  height: 150px;
  top: 50%;
  left: 50%;
  transform-origin: 0 0;
  animation: sweep 5s infinite linear;
  overflow: hidden;
}

.radarSweep::after {
  content: '';
  position: absolute;
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background: conic-gradient(
    from 0deg,
    rgba(144, 238, 144, 0.4) 0deg,
    rgba(144, 238, 144, 0.3) 45deg,
    transparent 90deg
  );
}

/* Scanning line */
.scanLine {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 150px;
  height: 2px;
  background: linear-gradient(90deg, rgba(144, 238, 144, 0.9), transparent);
  transform-origin: left;
  animation: sweep 5s infinite linear;
}

/* Ripple effect */
@keyframes ripple {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0;
  }
}

.rippleCircle {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border: 1px solid rgba(144, 238, 144, 0.5);
  border-radius: 50%;
  animation: ripple 3s infinite;
}

.rippleCircle:nth-child(2) {
  animation-delay: 1s;
}

.rippleCircle:nth-child(3) {
  animation-delay: 2s;
}

.footer {
  width: 100%;
  max-width: 600px;
  padding: 15px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
}

.goal {
  font-size: 0.9rem;
  color: #000000;
  margin-bottom: 10px;
  text-align: center;
}

/* Styles for the progress bar to match the image */
.progressBarContainer {
  width: 80%;
  max-width: 350px; /* Max width for progress bar */
  height: 20px; /* Increased height to accommodate thumb */
  display: flex;
  align-items: center;
  position: relative;
  margin-bottom: 15px;
}

.progressTrack {
  width: 100%;
  height: 6px; /* Thickness of the track */
  background-color: #B9F3B4; /* Changed to specified green */
  border-radius: 3px;
}

.progressThumb {
  width: 16px; /* Size of the thumb */
  height: 16px; /* Size of the thumb */
  background-color: #000000; /* Black thumb from image */
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  box-shadow: 0 0 5px rgba(0,0,0,0.2);
}

.controls {
  display: flex;
  justify-content: center; /* Center buttons */
  align-items: center;
  width: 100%;
  gap: 20px; /* Space between circular buttons */
}

/* Base style for all circular control buttons */
.circularButton {
  border-radius: 50%;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.2s ease;
  padding: 0; /* Remove default padding */
}

/* Style for the central Play/Pause button */
.playPauseCircularButton {
  width: 56px;
  height: 56px;
  background-color: transparent; /* Changed to transparent */
}

.playPauseCircularButton:hover {
  background-color: transparent; /* Changed to transparent */
}

/* Style for the side Reset and Mute/Unmute buttons */
.sideCircularButton {
  width: 44px;
  height: 44px;
  background-color: transparent; /* Changed to transparent */
}

.sideCircularButton:hover {
  background-color: transparent; /* Kept transparent on hover, or could be slightly darker transparent if desired */
}

.controlIcon {
  width: 60%;
  height: 60%;
  display: block;
} 